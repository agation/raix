<?xml version="1.0" encoding="UTF-8"?><apiPackage id="raix.reactive.testing"><apiName>raix.reactive.testing</apiName><apiDetail/><apiClassifier id="raix.reactive.testing:Subscription"><apiName>Subscription</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="raix.reactive.testing:Subscription:Subscription"><apiName>Subscription</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>subscribe</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unsubscribe</apiItemName><apiType value="Number"/><apiData>unknown</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="raix.reactive.testing:Subscription:subscribe"><apiName>subscribe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="raix.reactive.testing:Subscription:unsubscribe"><apiName>unsubscribe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="raix.reactive.testing:MockObserver"><apiName>MockObserver</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>raix.reactive:IObserver</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="raix.reactive.testing:MockObserver:MockObserver"><apiName>MockObserver</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scheduler</apiItemName><apiOperationClassifier>raix.reactive.testing:TestScheduler</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="raix.reactive.testing:MockObserver:assertNotifications"><apiName>assertNotifications</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>expectedNotifications</apiItemName><apiType value="Array"/></apiParam><apiParam><apiItemName>failFunction</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>valueComparer</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:assertTimings"><apiName>assertTimings</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recordedNotifications</apiItemName><apiType value="Array"/></apiParam><apiParam><apiItemName>failFunction</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>valueComparer</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:assertValues"><apiName>assertValues</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>expectedValues</apiItemName><apiType value="Array"/></apiParam><apiParam><apiItemName>failFunction</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>comparer</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:completed"><apiName>completed</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:error"><apiName>error</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Error"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:hasError"><apiName>hasError</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:onCompleted"><apiName>onCompleted</apiName><shortdesc>
		 
		 Notifies the subscriber that the sequence has completed and 
		 that no more messages will be received
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 
		 Notifies the subscriber that the sequence has completed and 
		 that no more messages will be received
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:onError"><apiName>onError</apiName><shortdesc>
		 
		 Notifies the subscriber that the sequence has halted with an error 
		 and that no more messages will be received
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>error</apiItemName><apiType value="Error"/></apiParam></apiOperationDef><apiDesc>
		 
		 Notifies the subscriber that the sequence has halted with an error 
		 and that no more messages will be received
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:MockObserver:onNext"><apiName>onNext</apiName><shortdesc>
		 
		 Notifies the subscriber that a value has been received
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc>
		 
		 Notifies the subscriber that a value has been received
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="raix.reactive.testing:MockObserver:recordedNotifications:get"><apiName>recordedNotifications</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="raix.reactive.testing:HotObservable"><apiName>HotObservable</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>raix.reactive:AbsObservable</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="raix.reactive.testing:HotObservable:HotObservable"><apiName>HotObservable</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scheduler</apiItemName><apiOperationClassifier>raix.reactive.testing:TestScheduler</apiOperationClassifier></apiParam><apiParam><apiItemName>messages</apiItemName><apiType value="Array"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="raix.reactive.testing:HotObservable:subscribeWith"><apiName>subscribeWith</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiOperationClassifier>raix.reactive:ICancelable</apiOperationClassifier></apiReturn><apiParam><apiItemName>observer</apiItemName><apiOperationClassifier>raix.reactive:IObserver</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="raix.reactive.testing:HotObservable:observers:get"><apiName>observers</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="raix.reactive.testing:HotObservable:subscriptions:get"><apiName>subscriptions</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="raix.reactive.testing:TestScheduler"><apiName>TestScheduler</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>raix.reactive.scheduling:IScheduler</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="raix.reactive.testing:TestScheduler:TestScheduler"><apiName>TestScheduler</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="raix.reactive.testing:TestScheduler:createColdObservable"><apiName>createColdObservable</apiName><shortdesc>
		 Creates a sequence from "recorded" values that will start a new timeline for each susbcriber  
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An observable sequence that will start a new timeline for each susbcriber
		 </apiDesc><apiOperationClassifier>raix.reactive.testing:ColdObservable</apiOperationClassifier></apiReturn><apiParam><apiItemName>recordedNotifications</apiItemName><apiType value="Array"/><apiDesc>An array of Recorded instances
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a sequence from "recorded" values that will start a new timeline for each susbcriber  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:TestScheduler:createHotObservable"><apiName>createHotObservable</apiName><shortdesc>
		 Creates a sequence from "recorded" values that will share a timeline between all subscribers  
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An observable sequence that will share a timeline between all subscribers
		 </apiDesc><apiOperationClassifier>raix.reactive.testing:HotObservable</apiOperationClassifier></apiReturn><apiParam><apiItemName>recordedNotifications</apiItemName><apiType value="Array"/><apiDesc>An array of Recorded instances
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a sequence from "recorded" values that will share a timeline between all subscribers  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:TestScheduler:runTo"><apiName>runTo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:TestScheduler:run"><apiName>run</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="raix.reactive.testing:TestScheduler:schedule"><apiName>schedule</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>raix.reactive:ICancelable</apiOperationClassifier></apiReturn><apiParam><apiItemName>action</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>dueTime</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="raix.reactive.testing:TestScheduler:actionCount:get"><apiName>actionCount</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="raix.reactive.testing:TestScheduler:now:get"><apiName>now</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="raix.reactive.testing:Recorded"><apiName>Recorded</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="raix.reactive.testing:Recorded:Recorded"><apiName>Recorded</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>time</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>notification</apiItemName><apiOperationClassifier>raix.reactive:Notification</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="raix.reactive.testing:Recorded:time:get"><apiName>time</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="raix.reactive.testing:Recorded:value:get"><apiName>value</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>raix.reactive:Notification</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="raix.reactive.testing:ColdObservable"><apiName>ColdObservable</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>raix.reactive:AbsObservable</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="raix.reactive.testing:ColdObservable:ColdObservable"><apiName>ColdObservable</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scheduler</apiItemName><apiOperationClassifier>raix.reactive.testing:TestScheduler</apiOperationClassifier></apiParam><apiParam><apiItemName>messages</apiItemName><apiType value="Array"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="raix.reactive.testing:ColdObservable:subscribeWith"><apiName>subscribeWith</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiOperationClassifier>raix.reactive:ICancelable</apiOperationClassifier></apiReturn><apiParam><apiItemName>observer</apiItemName><apiOperationClassifier>raix.reactive:IObserver</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="raix.reactive.testing:ColdObservable:subscriptions:get"><apiName>subscriptions</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>