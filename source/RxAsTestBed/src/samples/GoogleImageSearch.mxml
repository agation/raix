<?xml version="1.0" encoding="utf-8"?>
<samples:AbsSample xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300"
	xmlns:samples="samples.*">
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.messaging.SubscriptionInfo;
			import com.adobe.serialization.json.JSON;
			import mx.events.FlexEvent;
			import rx.ISubscription;
			import rx.IObservable;
			import rx.Observable;
			
			private var gisSubscription : ISubscription;
			
			private function getObservableJSON(request : URLRequest) : IObservable
			{
				var loader : URLLoader = new URLLoader();
				loader.load(request)
				
				try
				{
					return Observable.fromEvent(loader, Event.COMPLETE)
						.select(Object, function(s:String):Object { return JSON.decode(loader.data); });
				}
				catch(error : Error)
				{
					return Observable.throwError(error, XML)
				}
				
				return null; // Grr compiler
			}
			
			private function getGisUrlRequest(searchTerm : String) : URLRequest
			{
				var encodedSearchTerm : String = searchTerm; // TODO
				
				var urlRequest : URLRequest = new URLRequest();
				urlRequest.url ="http://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=" + 
					encodedSearchTerm;
					
				return urlRequest;
			}
			
			private function getImageObservable(searchTerm : String) : void
			{
				
			}

			public override function setup() : void
			{
				var jsonRequest : IObservable = getObservableJSON(
					getGisUrlRequest("flower"));
					
				var imageRequest : IObservable = jsonRequest
					.selectMany(Object, function(result:Object) : IObservable
					{
						return Observable.returnValues(Object, result.responseData.results);
					})
					.select(Image, function(result:Object) : Image
					{
						var image : Image = new Image();
						image.toolTip = result.titleNoFormatting;
						image.load(result.url);
						
						return image;
					});
				
				gisSubscription = imageRequest.subscribeFunc(
					function(image : Image):void
					{
						imageContainer.addChild(image);
					});
			}
			
			public override function teardown() : void
			{
				if (gisSubscription != null)
				{
					gisSubscription.unsubscribe();
					gisSubscription = null;
				}
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%">
		<mx:VBox width="100%" height="100%" borderColor="#000000" id="imageContainer">
		</mx:VBox>
		<mx:Box height="80%" width="100%" visible="{showCode}" includeInLayout="{showCode}">
			<mx:TextArea height="100%" width="100%" fontFamily="Courier New">
				<mx:htmlText>
	<![CDATA[
var interval : IObservable = Observable.interval(500);
var bufferedInterval : IObservable = interval.bufferWithCount(5);

intervalSub = interval.subscribeFunc(function(i:uint):void
{
	intervalLabel.text = i.toString();
});

bufferedSub = bufferedInterval.subscribeFunc(function(indexes : Array):void
{
	bufferedIntervalLabel.text = indexes.join(", ");
});
	]]>
				</mx:htmlText>
			</mx:TextArea>
		</mx:Box>
	</mx:VBox>
	
	
</samples:AbsSample>
