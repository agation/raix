<?xml version="1.0" encoding="utf-8"?>
<samples:AbsSample xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" xmlns:samples="samples.*">
	<mx:Script>
		<![CDATA[
			import rx.Observer;
			import mx.controls.Label;
			import mx.events.FlexEvent;
			import rx.ICancelable;
			import rx.IObservable;
			import rx.Observable;
			
			private var subscriptions : Array = [];
			
			private static const VALUE : String = "Time flies like an arrow";
			private static const LETTER_WIDTH : int = 7; 
			
			private var labels : Array = new Array();
			
			public override function setup() : void
			{
				var mm : IObservable = Observable.fromEvent(trackContainer, MouseEvent.MOUSE_MOVE);
				
				for (var i:int=0; i<VALUE.length; i++)
				{
					(function(i:int) : void
					{
						var label : Label = new Label();
						label.text = VALUE.charAt(i);
						trackContainer.addChild(label);
						
						labels.push(label);						
						
						var sub : ICancelable = mm
							.delay(i * 100)
							.subscribeFunc(function(me : MouseEvent):void
							{
								var glob : Point = new Point(me.stageX, me.stageY);
								
								var pnt : Point = trackContainer.globalToLocal(glob);
								
								label.y = pnt.y;
								label.x = pnt.x + (i * LETTER_WIDTH) + 15; 
							});
						
						subscriptions.push(sub);
					})(i);
				}
			}
			
			public override function teardown() : void
			{
				for each(var subscription:ICancelable in subscriptions)
				{
					subscription.cancel();
				}
				
				while(labels.length > 0)
				{
					var label : Label = labels.shift();
					
					trackContainer.removeChild(label);
				}
				
				subscriptions = [];
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%">
		<mx:Canvas width="100%" height="100%" borderColor="#000000" id="trackContainer" horizontalScrollPolicy="off" fontFamily="Courier New">

		</mx:Canvas>
		<mx:Box height="80%" width="100%" visible="{showCode}" includeInLayout="{showCode}">
			<mx:TextArea height="100%" width="100%" fontFamily="Courier New">
				<mx:htmlText>
	<![CDATA[
var mm : IObservable = Observable.fromEvent(trackContainer, MouseEvent.MOUSE_MOVE);
				
for (var i:int=0; i&lt;VALUE.length; i++)
{
	(function(i:int) : void
	{
		var label : Label = new Label();
		label.text = VALUE.charAt(i);
		trackContainer.addChild(label);
		
		labels.push(label);						ICancelableub : ISubscription = mm
			.delay(i * 100)
			.subscribeFunc(function(me : MouseEvent):void
			{
				var glob : Point = new Point(me.stageX, me.stageY);
				
				var pnt : Point = trackContainer.globalToLocal(glob);
				
				label.y = pnt.y;
				label.x = pnt.x + (i * LETTER_WIDTH) + 15; 
			});
		
		subscriptions.push(sub);
	})(i);
	]]>
				</mx:htmlText>
			</mx:TextArea>
		</mx:Box>
	</mx:VBox>
	
	
</samples:AbsSample>
